kkkkkkkkxCCCCCCC0000000E	RPTCC k8, cond
xxxxxxxxxCCCCCCC0000001E	RETCC cond
LLLLLLLLxCCCCCCC0000010E	BCC L8, cond
LLLLLLLLLLLLLLLL0000011E	B L16
LLLLLLLLLLLLLLLL0000100E	CALL L16
kkkkkkkkkkkkkkkk0000110E	RPT k16
llllllllllllllll0000111E	RPTB pmad
xxSHIFTWDDSS00000001000E	AND ACx << #SHIFTW[, ACy]
xxSHIFTWDDSS00010001000E	OR ACx << #SHIFTW[, ACy]
xxSHIFTWDDSS00100001000E	XOR ACx << #SHIFTW[, ACy]
xxSHIFTWDDSS00110001000E	ADD ACx << #SHIFTW, ACy
xxSHIFTWDDSS01000001000E	SUB ACx << #SHIFTW, ACy
xxSHIFTWDDSS01010001000E	SFTS ACx, #SHIFTW[, ACy]
xxSHIFTWDDSS01100001000E	SFTSC ACx, #SHIFTW[, ACy]
xxSHIFTWDDSS01110001000E	SFTL ACx, #SHIFTW[, ACy]
xxddxxxxxxSS10000001000E	EXP ACx, Tx
xxddxxxxDDSS10010001000E	MANT ACx, ACy :: NEXP ACx, Tx
SSddxxxtxxSS10100001000E	BCNT ACx, ACy,TCx, Tx
SSDDnnnnDDSS11000001000E	MAXDIFF ACx, ACy, ACz, ACw
SSDDxxxrDDSS11010001000E	DMAXDIFF ACx, ACy, ACz, ACw, TRNx
SSDDxxxxDDSS11100001000E	MINDIFF ACx, ACy, ACz, ACw
SSDDxxxrDDSS11110001000E	DMINDIFF ACx, ACy, ACz, ACw, TRNx
FDDDxuxtFSSScc000001001E	CMP[U] src RELOP dst, TCx
FDDD0uttFSSScc010001001E	CMPAND[U] src RELOP dst, TCy, TCx
FDDD1uttFSSScc010001001E	CMPAND[U] src RELOP dst, !TCy, TCx
FDDD0uttFSSScc100001001E	CMPOR[U] src RELOP dst, TCy, TCx
FDDD1uttFSSScc100001001E	CMPOR[U] src RELOP dst, !TCy, TCx
FDDD0xvvFSSSxx110001001E	ROL BitOut, src, BitIn, dst
FDDD1xvvFSSSxx110001001E	ROR BitIn, src, BitOut, dst
FDDD0000FSSSxxxx0001010E	AADD TAx, TAy
FDDD0001FSSSxxxx0001010E	AMOV TAx, TAy
FDDD0010FSSSxxxx0001010E	ASUB TAx, TAy
FDDD0100PPPPPPPP0001010E	AADD P8, TAx
FDDD0101PPPPPPPP0001010E	AMOV P8, TAx
FDDD0110PPPPPPPP0001010E	ASUB P8, TAx
FDDD1000FSSSxxxx0001010E	AADD TAx, TAy
FDDD1001FSSSxxxx0001010E	AMOV TAx, TAy
FDDD1010FSSSxxxx0001010E	ASUB TAx, TAy
FDDD1100PPPPPPPP0001010E	AADD P8, TAx
FDDD1101PPPPPPPP0001010E	AMOV P8, TAx
FDDD1110PPPPPPPP0001010E	ASUB P8, TAx
XACD0000XACS00010001010E	AADD XACsrc, XACdst
XACD0001XACS00010001010E	AMOV XACsrc, XACdst
XACD0010XACS00010001010E	ASUB XACsrc, XACdst
XACD1000XACS00010001010E	AADD XACsrc, XACdst
XACD1001XACS00010001010E	AMOV XACsrc, XACdst
XACD1010XACS00010001010E	ASUB XACsrc, XACdst
kkkk0000xxxxxkkk0001011E	MOV k7, DPH
kkkk0011xxxkkkkk0001011E	MOV k9, PDP
kkkk0100kkkkkkkk0001011E	MOV k12, BK03
kkkk0101kkkkkkkk0001011E	MOV k12, BK47
kkkk0110kkkkkkkk0001011E	MOV k12, BKC
kkkk1000kkkkkkkk0001011E	MOV k12, CSR
kkkk1001kkkkkkkk0001011E	MOV k12, BRC0
kkkk1010kkkkkkkk0001011E	MOV k12, BRC1
FDDDFSSSkkkkkkkk0001100E	AND k8, src, dst
FDDDFSSSkkkkkkkk0001101E	OR k8, src, dst
FDDDFSSSkkkkkkkk0001110E	XOR k8, src, dst
SSDDxx0%KKKKKKKK0001111E	MPYK[R] K8, [ACx,] ACy
SSDDss1%KKKKKKKK0001111E	MACK[R] Tx, K8, [ACx,] ACy
0010000E	NOP
FSSSFDDD0010001E	MOV src, dst
FSSSFDDD0010010E	ADD [src,] dst
FSSSFDDD0010011E	SUB [src,] dst
FSSSFDDD0010100E	AND src, dst
FSSSFDDD0010101E	OR src, dst
FSSSFDDD0010110E	XOR src, dst
FSSSFDDD0010111E	MAX [src,] dst
FSSSFDDD0011000E	MIN [src,] dst
FSSSFDDD0011001E	ABS [src,] dst
FSSSFDDD0011010E	NEG [src,] dst
FSSSFDDD0011011E	NOT [src,] dst
FSSSFDDD0011100E	PSH src1, src2
FSSSFDDD0011101E	POP dst1, dst2
kkkkFDDD0011110E	MOV k4, dst
kkkkFDDD0011111E	MOV –k4, dst
kkkkFDDD0100000E	ADD k4, dst
kkkkFDDD0100001E	SUB k4, dst
00SSFDDD0100010E	MOV HI(ACx), TAx
01x0FDDD0100010E	SFTS dst, #−1
01x1FDDD0100010E	SFTS dst, #1
1000FDDD0100010E	MOV SP, TAx
1001FDDD0100010E	MOV SSP, TAx
1010FDDD0100010E	MOV CDP, TAx
1100FDDD0100010E	MOV BRC0, TAx
1101FDDD0100010E	MOV BRC1, TAx
1110FDDD0100010E	MOV RPTC, TAx
kkkk00000100011E	BCLR k4, ST0_55
kkkk00010100011E	BSET k4, ST0_55
kkkk00100100011E	BCLR k4, ST1_55
kkkk00110100011E	BSET k4, ST1_55
kkkk01000100011E	BCLR k4, ST2_55
kkkk01010100011E	BSET k4, ST2_55
kkkk01100100011E	BCLR k4, ST3_55
kkkk01110100011E	BSET k4, ST3_55
xxxxx0000100100E	RPT CSR
FSSSx0010100100E	RPTADD CSR, TAx
kkkkx0100100100E	RPTADD CSR, k4
kkkkx0110100100E	RPTSUB CSR, k4
xxxxx1000100100E	RET
0LLLLLLL0100101E	B L7
1lllllll0100101E	RPTBLOCAL pmad
kkkkkkkk0100110E	RPT k8
KKKKKKKK0100111E	AADD K8,SP
FDDDx0000101000E	SFTL dst, #1
FDDDx0010101000E	SFTL dst, #−1
FDDDx0100101000E	POP dst
xxDDx0110101000E	POP dbl(ACx)
FSSSx1100101000E	PSH src
xxSSx1110101000E	PSH dbl(ACx)
XDDD01000101000E	POPBOTH xdst
XSSS01010101000E	PSHBOTH xsrc
FSSS00DD0101001E	MOV TAx, HI(ACx)
FSSS10000101001E	MOV TAx, SP
FSSS10010101001E	MOV TAx, SSP
FSSS10100101001E	MOV TAx, CDP
FSSS11000101001E	MOV TAx, CSR
FSSS11010101001E	MOV TAx, BRC1
FSSS11100101001E	MOV TAx, BRC0
DDSS000%0101010E	ADD[R]V [ACx,] ACy
DDSS001%0101010E	SQA[R] [ACx,] ACy
DDSS010%0101010E	SQS[R] [ACx,] ACy
DDSS011%0101010E	MPY[R] [ACx,] ACy
DDSS100%0101010E	SQR[R] [ACx,] ACy
DDSS101%0101010E	ROUND [ACx,] ACy
DDSS110%0101010E	SAT[R] [ACx,] ACy
DDSSss0%0101011E	MAC[R] ACx, Tx, ACy[, ACy]
DDSSss1%0101011E	MAS[R] Tx, [ACx,] ACy
DDSSss0%0101100E	MPY[R] Tx, [ACx,] ACy
DDSSss1%0101100E	MAC[R] ACy, Tx, ACx, ACy
DDSSss000101101E	ADD ACx << Tx, ACy
DDSSss010101101E	SUB ACx << Tx, ACy
DDxxxx1t0101101E	SFTCC ACx, TCx
DDSSss000101110E	SFTL ACx, Tx[, ACy]
DDSSss010101110E	SFTS ACx, Tx[, ACy]
DDSSss100101110E	SFTSC ACx, Tx[, ACy]
00kkkkkk0101111E	SWAP ( )
